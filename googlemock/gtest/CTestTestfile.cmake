# CMake generated Testfile for 
# Source directory: F:/源码/googletest-master/googletest
# Build directory: F:/源码/gtest_test/googlemock/gtest
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(googletest-death-test-test "F:/源码/gtest_test/googlemock/gtest/Debug/googletest-death-test-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(googletest-death-test-test "F:/源码/gtest_test/googlemock/gtest/Release/googletest-death-test-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(googletest-death-test-test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/googletest-death-test-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(googletest-death-test-test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/googletest-death-test-test.exe")
else()
  add_test(googletest-death-test-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest_environment_test "F:/源码/gtest_test/googlemock/gtest/Debug/gtest_environment_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest_environment_test "F:/源码/gtest_test/googlemock/gtest/Release/gtest_environment_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest_environment_test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/gtest_environment_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest_environment_test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/gtest_environment_test.exe")
else()
  add_test(gtest_environment_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(googletest-filepath-test "F:/源码/gtest_test/googlemock/gtest/Debug/googletest-filepath-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(googletest-filepath-test "F:/源码/gtest_test/googlemock/gtest/Release/googletest-filepath-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(googletest-filepath-test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/googletest-filepath-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(googletest-filepath-test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/googletest-filepath-test.exe")
else()
  add_test(googletest-filepath-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(googletest-linked-ptr-test "F:/源码/gtest_test/googlemock/gtest/Debug/googletest-linked-ptr-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(googletest-linked-ptr-test "F:/源码/gtest_test/googlemock/gtest/Release/googletest-linked-ptr-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(googletest-linked-ptr-test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/googletest-linked-ptr-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(googletest-linked-ptr-test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/googletest-linked-ptr-test.exe")
else()
  add_test(googletest-linked-ptr-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(googletest-listener-test "F:/源码/gtest_test/googlemock/gtest/Debug/googletest-listener-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(googletest-listener-test "F:/源码/gtest_test/googlemock/gtest/Release/googletest-listener-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(googletest-listener-test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/googletest-listener-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(googletest-listener-test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/googletest-listener-test.exe")
else()
  add_test(googletest-listener-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest_main_unittest "F:/源码/gtest_test/googlemock/gtest/Debug/gtest_main_unittest.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest_main_unittest "F:/源码/gtest_test/googlemock/gtest/Release/gtest_main_unittest.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest_main_unittest "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/gtest_main_unittest.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest_main_unittest "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/gtest_main_unittest.exe")
else()
  add_test(gtest_main_unittest NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(googletest-message-test "F:/源码/gtest_test/googlemock/gtest/Debug/googletest-message-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(googletest-message-test "F:/源码/gtest_test/googlemock/gtest/Release/googletest-message-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(googletest-message-test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/googletest-message-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(googletest-message-test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/googletest-message-test.exe")
else()
  add_test(googletest-message-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest_no_test_unittest "F:/源码/gtest_test/googlemock/gtest/Debug/gtest_no_test_unittest.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest_no_test_unittest "F:/源码/gtest_test/googlemock/gtest/Release/gtest_no_test_unittest.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest_no_test_unittest "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/gtest_no_test_unittest.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest_no_test_unittest "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/gtest_no_test_unittest.exe")
else()
  add_test(gtest_no_test_unittest NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(googletest-options-test "F:/源码/gtest_test/googlemock/gtest/Debug/googletest-options-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(googletest-options-test "F:/源码/gtest_test/googlemock/gtest/Release/googletest-options-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(googletest-options-test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/googletest-options-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(googletest-options-test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/googletest-options-test.exe")
else()
  add_test(googletest-options-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(googletest-param-test-test "F:/源码/gtest_test/googlemock/gtest/Debug/googletest-param-test-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(googletest-param-test-test "F:/源码/gtest_test/googlemock/gtest/Release/googletest-param-test-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(googletest-param-test-test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/googletest-param-test-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(googletest-param-test-test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/googletest-param-test-test.exe")
else()
  add_test(googletest-param-test-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(googletest-port-test "F:/源码/gtest_test/googlemock/gtest/Debug/googletest-port-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(googletest-port-test "F:/源码/gtest_test/googlemock/gtest/Release/googletest-port-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(googletest-port-test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/googletest-port-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(googletest-port-test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/googletest-port-test.exe")
else()
  add_test(googletest-port-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest_pred_impl_unittest "F:/源码/gtest_test/googlemock/gtest/Debug/gtest_pred_impl_unittest.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest_pred_impl_unittest "F:/源码/gtest_test/googlemock/gtest/Release/gtest_pred_impl_unittest.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest_pred_impl_unittest "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/gtest_pred_impl_unittest.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest_pred_impl_unittest "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/gtest_pred_impl_unittest.exe")
else()
  add_test(gtest_pred_impl_unittest NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest_premature_exit_test "F:/源码/gtest_test/googlemock/gtest/Debug/gtest_premature_exit_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest_premature_exit_test "F:/源码/gtest_test/googlemock/gtest/Release/gtest_premature_exit_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest_premature_exit_test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/gtest_premature_exit_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest_premature_exit_test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/gtest_premature_exit_test.exe")
else()
  add_test(gtest_premature_exit_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(googletest-printers-test "F:/源码/gtest_test/googlemock/gtest/Debug/googletest-printers-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(googletest-printers-test "F:/源码/gtest_test/googlemock/gtest/Release/googletest-printers-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(googletest-printers-test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/googletest-printers-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(googletest-printers-test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/googletest-printers-test.exe")
else()
  add_test(googletest-printers-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest_prod_test "F:/源码/gtest_test/googlemock/gtest/Debug/gtest_prod_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest_prod_test "F:/源码/gtest_test/googlemock/gtest/Release/gtest_prod_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest_prod_test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/gtest_prod_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest_prod_test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/gtest_prod_test.exe")
else()
  add_test(gtest_prod_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest_repeat_test "F:/源码/gtest_test/googlemock/gtest/Debug/gtest_repeat_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest_repeat_test "F:/源码/gtest_test/googlemock/gtest/Release/gtest_repeat_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest_repeat_test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/gtest_repeat_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest_repeat_test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/gtest_repeat_test.exe")
else()
  add_test(gtest_repeat_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest_sole_header_test "F:/源码/gtest_test/googlemock/gtest/Debug/gtest_sole_header_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest_sole_header_test "F:/源码/gtest_test/googlemock/gtest/Release/gtest_sole_header_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest_sole_header_test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/gtest_sole_header_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest_sole_header_test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/gtest_sole_header_test.exe")
else()
  add_test(gtest_sole_header_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest_stress_test "F:/源码/gtest_test/googlemock/gtest/Debug/gtest_stress_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest_stress_test "F:/源码/gtest_test/googlemock/gtest/Release/gtest_stress_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest_stress_test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/gtest_stress_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest_stress_test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/gtest_stress_test.exe")
else()
  add_test(gtest_stress_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(googletest-test-part-test "F:/源码/gtest_test/googlemock/gtest/Debug/googletest-test-part-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(googletest-test-part-test "F:/源码/gtest_test/googlemock/gtest/Release/googletest-test-part-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(googletest-test-part-test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/googletest-test-part-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(googletest-test-part-test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/googletest-test-part-test.exe")
else()
  add_test(googletest-test-part-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest_throw_on_failure_ex_test "F:/源码/gtest_test/googlemock/gtest/Debug/gtest_throw_on_failure_ex_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest_throw_on_failure_ex_test "F:/源码/gtest_test/googlemock/gtest/Release/gtest_throw_on_failure_ex_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest_throw_on_failure_ex_test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/gtest_throw_on_failure_ex_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest_throw_on_failure_ex_test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/gtest_throw_on_failure_ex_test.exe")
else()
  add_test(gtest_throw_on_failure_ex_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest-typed-test_test "F:/源码/gtest_test/googlemock/gtest/Debug/gtest-typed-test_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest-typed-test_test "F:/源码/gtest_test/googlemock/gtest/Release/gtest-typed-test_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest-typed-test_test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/gtest-typed-test_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest-typed-test_test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/gtest-typed-test_test.exe")
else()
  add_test(gtest-typed-test_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest_unittest "F:/源码/gtest_test/googlemock/gtest/Debug/gtest_unittest.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest_unittest "F:/源码/gtest_test/googlemock/gtest/Release/gtest_unittest.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest_unittest "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/gtest_unittest.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest_unittest "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/gtest_unittest.exe")
else()
  add_test(gtest_unittest NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest-unittest-api_test "F:/源码/gtest_test/googlemock/gtest/Debug/gtest-unittest-api_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest-unittest-api_test "F:/源码/gtest_test/googlemock/gtest/Release/gtest-unittest-api_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest-unittest-api_test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/gtest-unittest-api_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest-unittest-api_test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/gtest-unittest-api_test.exe")
else()
  add_test(gtest-unittest-api_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest-death-test_ex_nocatch_test "F:/源码/gtest_test/googlemock/gtest/Debug/gtest-death-test_ex_nocatch_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest-death-test_ex_nocatch_test "F:/源码/gtest_test/googlemock/gtest/Release/gtest-death-test_ex_nocatch_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest-death-test_ex_nocatch_test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/gtest-death-test_ex_nocatch_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest-death-test_ex_nocatch_test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/gtest-death-test_ex_nocatch_test.exe")
else()
  add_test(gtest-death-test_ex_nocatch_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest-death-test_ex_catch_test "F:/源码/gtest_test/googlemock/gtest/Debug/gtest-death-test_ex_catch_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest-death-test_ex_catch_test "F:/源码/gtest_test/googlemock/gtest/Release/gtest-death-test_ex_catch_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest-death-test_ex_catch_test "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/gtest-death-test_ex_catch_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest-death-test_ex_catch_test "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/gtest-death-test_ex_catch_test.exe")
else()
  add_test(gtest-death-test_ex_catch_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest_no_rtti_unittest "F:/源码/gtest_test/googlemock/gtest/Debug/gtest_no_rtti_unittest.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest_no_rtti_unittest "F:/源码/gtest_test/googlemock/gtest/Release/gtest_no_rtti_unittest.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest_no_rtti_unittest "F:/源码/gtest_test/googlemock/gtest/MinSizeRel/gtest_no_rtti_unittest.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest_no_rtti_unittest "F:/源码/gtest_test/googlemock/gtest/RelWithDebInfo/gtest_no_rtti_unittest.exe")
else()
  add_test(gtest_no_rtti_unittest NOT_AVAILABLE)
endif()
