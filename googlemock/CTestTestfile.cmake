# CMake generated Testfile for 
# Source directory: F:/源码/googletest-master/googlemock
# Build directory: F:/源码/gtest_test/googlemock
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock-actions_test "F:/源码/gtest_test/googlemock/Debug/gmock-actions_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock-actions_test "F:/源码/gtest_test/googlemock/Release/gmock-actions_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock-actions_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock-actions_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock-actions_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock-actions_test.exe")
else()
  add_test(gmock-actions_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock-cardinalities_test "F:/源码/gtest_test/googlemock/Debug/gmock-cardinalities_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock-cardinalities_test "F:/源码/gtest_test/googlemock/Release/gmock-cardinalities_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock-cardinalities_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock-cardinalities_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock-cardinalities_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock-cardinalities_test.exe")
else()
  add_test(gmock-cardinalities_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock_ex_test "F:/源码/gtest_test/googlemock/Debug/gmock_ex_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock_ex_test "F:/源码/gtest_test/googlemock/Release/gmock_ex_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock_ex_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock_ex_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock_ex_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock_ex_test.exe")
else()
  add_test(gmock_ex_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock-generated-actions_test "F:/源码/gtest_test/googlemock/Debug/gmock-generated-actions_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock-generated-actions_test "F:/源码/gtest_test/googlemock/Release/gmock-generated-actions_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock-generated-actions_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock-generated-actions_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock-generated-actions_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock-generated-actions_test.exe")
else()
  add_test(gmock-generated-actions_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock-generated-function-mockers_test "F:/源码/gtest_test/googlemock/Debug/gmock-generated-function-mockers_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock-generated-function-mockers_test "F:/源码/gtest_test/googlemock/Release/gmock-generated-function-mockers_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock-generated-function-mockers_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock-generated-function-mockers_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock-generated-function-mockers_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock-generated-function-mockers_test.exe")
else()
  add_test(gmock-generated-function-mockers_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock-generated-internal-utils_test "F:/源码/gtest_test/googlemock/Debug/gmock-generated-internal-utils_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock-generated-internal-utils_test "F:/源码/gtest_test/googlemock/Release/gmock-generated-internal-utils_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock-generated-internal-utils_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock-generated-internal-utils_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock-generated-internal-utils_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock-generated-internal-utils_test.exe")
else()
  add_test(gmock-generated-internal-utils_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock-generated-matchers_test "F:/源码/gtest_test/googlemock/Debug/gmock-generated-matchers_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock-generated-matchers_test "F:/源码/gtest_test/googlemock/Release/gmock-generated-matchers_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock-generated-matchers_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock-generated-matchers_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock-generated-matchers_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock-generated-matchers_test.exe")
else()
  add_test(gmock-generated-matchers_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock-internal-utils_test "F:/源码/gtest_test/googlemock/Debug/gmock-internal-utils_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock-internal-utils_test "F:/源码/gtest_test/googlemock/Release/gmock-internal-utils_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock-internal-utils_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock-internal-utils_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock-internal-utils_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock-internal-utils_test.exe")
else()
  add_test(gmock-internal-utils_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock-matchers_test "F:/源码/gtest_test/googlemock/Debug/gmock-matchers_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock-matchers_test "F:/源码/gtest_test/googlemock/Release/gmock-matchers_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock-matchers_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock-matchers_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock-matchers_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock-matchers_test.exe")
else()
  add_test(gmock-matchers_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock-more-actions_test "F:/源码/gtest_test/googlemock/Debug/gmock-more-actions_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock-more-actions_test "F:/源码/gtest_test/googlemock/Release/gmock-more-actions_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock-more-actions_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock-more-actions_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock-more-actions_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock-more-actions_test.exe")
else()
  add_test(gmock-more-actions_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock-nice-strict_test "F:/源码/gtest_test/googlemock/Debug/gmock-nice-strict_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock-nice-strict_test "F:/源码/gtest_test/googlemock/Release/gmock-nice-strict_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock-nice-strict_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock-nice-strict_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock-nice-strict_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock-nice-strict_test.exe")
else()
  add_test(gmock-nice-strict_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock-port_test "F:/源码/gtest_test/googlemock/Debug/gmock-port_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock-port_test "F:/源码/gtest_test/googlemock/Release/gmock-port_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock-port_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock-port_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock-port_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock-port_test.exe")
else()
  add_test(gmock-port_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock-spec-builders_test "F:/源码/gtest_test/googlemock/Debug/gmock-spec-builders_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock-spec-builders_test "F:/源码/gtest_test/googlemock/Release/gmock-spec-builders_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock-spec-builders_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock-spec-builders_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock-spec-builders_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock-spec-builders_test.exe")
else()
  add_test(gmock-spec-builders_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock_link_test "F:/源码/gtest_test/googlemock/Debug/gmock_link_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock_link_test "F:/源码/gtest_test/googlemock/Release/gmock_link_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock_link_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock_link_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock_link_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock_link_test.exe")
else()
  add_test(gmock_link_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock_test "F:/源码/gtest_test/googlemock/Debug/gmock_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock_test "F:/源码/gtest_test/googlemock/Release/gmock_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock_test.exe")
else()
  add_test(gmock_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock-more-actions_no_exception_test "F:/源码/gtest_test/googlemock/Debug/gmock-more-actions_no_exception_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock-more-actions_no_exception_test "F:/源码/gtest_test/googlemock/Release/gmock-more-actions_no_exception_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock-more-actions_no_exception_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock-more-actions_no_exception_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock-more-actions_no_exception_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock-more-actions_no_exception_test.exe")
else()
  add_test(gmock-more-actions_no_exception_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gmock_no_rtti_test "F:/源码/gtest_test/googlemock/Debug/gmock_no_rtti_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gmock_no_rtti_test "F:/源码/gtest_test/googlemock/Release/gmock_no_rtti_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gmock_no_rtti_test "F:/源码/gtest_test/googlemock/MinSizeRel/gmock_no_rtti_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gmock_no_rtti_test "F:/源码/gtest_test/googlemock/RelWithDebInfo/gmock_no_rtti_test.exe")
else()
  add_test(gmock_no_rtti_test NOT_AVAILABLE)
endif()
subdirs("gtest")
